---
# tasks file for postgresql
  - name: Get PostgreSQL packages
    yum:
      list: postgresql
    register: pgsql_packages

  - name: Print pgsql_packages
    debug:
      msg: "pgsql_packages {{ pgsql_packages }}"
    when: debug_all or debug_pg

  - name: Set pgsql_exists fact 
    set_fact: 
      pgsql_exists: pgsql_packages.results | selectattr("yumstate", "match", "installed") | list | length > 0

  - name: Set pgsql_installed_version fact 
    set_fact: 
      pgsql_installed_ver: "{{ pgsql_packages.results 
        | selectattr('yumstate', 'match', 'installed')
        | map(attribute='version') | list | first | default('0.0.0') }}"
    when: pgsql_exists

  - name: Print pgsql_installed_ver fact
    debug:
      msg: "pgsql version is {{ pgsql_installed_ver }}"
    when: debug_all or debug_pg

  #add postgresql repo
  - name: Install PostgreSQL repo
    become: true
    yum: name="{{ pg_repo_rpm }}" state=present
    when: not pgsql_exists or pgsql_installed_ver != pg_long_ver

  - name: Install PostgreSQL and supporting packages
    become: true
    yum: name={{ item }} state=latest update_cache=yes
    with_items: '{{ pg_packages }}'
    when: not pgsql_exists or pgsql_installed_ver != pg_long_ver

  - name: Check to see if PostgreSQL is already initialized
    become: true
    stat: path="/var/lib/pgsql/{{ pg_version }}/data/pg_hba.conf"
    register: pg_init

  - name: Initialize the DB
    become: true
    shell: "/usr/pgsql-{{ pg_version }}/bin/postgresql{{ pg_short_ver }}-setup initdb"
    when: not pg_init.stat.exists

  - name: Enable and start postgreSQL
    become: true
    service: name='postgresql-{{ pg_version }}' enabled=yes state=started


