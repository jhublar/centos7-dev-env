---
# tasks file for postgresql
  - name: Get PostgreSQL packages
    yum:
      list: postgresql
    register: pgsql_packages

  - name: Print pgsql_packages
    debug:
      msg: "pgsql_packages {{ pgsql_packages }}"
    when: debug_all or debug_pg

  - name: Set pgsql_exists fact 
    set_fact: 
      pgsql_exists: pgsql_packages.results | selectattr("yumstate", "match", "installed") | list | length > 0

  - name: Set pgsql_installed_version fact 
    set_fact: 
      pgsql_installed_ver: "{{ pgsql_packages.results 
        | selectattr('yumstate', 'match', 'installed')
        | map(attribute='version') | list | first | default('0.0.0') }}"
    when: pgsql_exists

  - name: Print pgsql_installed_ver fact
    debug:
      msg: "pgsql version is {{ pgsql_installed_ver }}"
    when: debug_all or debug_pg

  #add postgresql repo
  - name: Install PostgreSQL repo
    become: true
    yum: name="{{ pg_repo_rpm }}" state=present
    when: not pgsql_exists or pgsql_installed_ver != pg_long_ver

  - name: Install PostgreSQL and supporting packages
    become: true
    yum: name={{ pg_packages }} state=latest update_cache=yes
    when: not pgsql_exists or pgsql_installed_ver != pg_long_ver

  - name: Install Python psycopg2 module
    become: true
    yum:
      name: python-psycopg2
      state: present
    when: configure_postgresql or not pgsql_exists or pgsql_installed_ver != pg_long_ver

  - name: Check to see if PostgreSQL is already initialized
    become: true
    stat: path="/var/lib/pgsql/{{ pg_version }}/data/pg_hba.conf"
    register: pg_init

  - name: Initialize the DB
    become: true
    shell: "/usr/pgsql-{{ pg_short_ver }}/bin/postgresql-{{ pg_short_ver }}-setup initdb"
    when: not pg_init.stat.exists

  - name: Setup postgresql.conf
    become: true
    template: src=postgresql.conf.j2 dest="/var/lib/pgsql/{{ pg_version }}/data/postgresql.conf" mode=0644
    notify: Restart postgresql
    when: configure_postgresql

  - name: Setup pg_hba.conf
    become: true
    template: src=pg_hba.conf.j2 dest="/var/lib/pgsql/{{ pg_version }}/data/pg_hba.conf" mode=0644
    with_dict: "{{ pg_conf }}"
    notify: Restart postgresql
    when: configure_postgresql

  - name: Enable and start postgreSQL
    become: true
    service: name='postgresql-{{ pg_version }}' enabled=yes state=started

  - name: Create Database "{{ pg_db }}"
    become: true
    become_user: postgres
    postgresql_db:
      name: "{{ pg_db }}"
      encoding: UTF-8
      lc_collate: en_US.UTF-8
      lc_ctype: en_US.UTF-8
    when: configure_postgresql

  - name: Create Role "{{ pg_role }}"
    become: true
    become_user: postgres
    postgresql_user:
      db: "{{ pg_db }}"
      name: "{{ pg_role }}"
      password: "{{ pg_password }}"
      role_attr_flags: CREATEDB,SUPERUSER,LOGIN
      expires: infinity
    when: configure_postgresql

  - name: Add extensions to "{{ pg_db }}"
    become: true
    become_user: postgres
    postgresql_ext:
      name: "{{ item }}"
      db: test
    with_items: "{{ pg_db_extns }}"
    when: configure_postgresql

